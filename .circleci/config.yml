# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2



jobs:
  
  build:
    
    docker:
      # specify the version
      - image: circleci/golang:1.8

      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/gefracto/gotasks
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: mkdir TEST_RESULTS
      - run: go get github.com/jstemmer/go-junit-report
      - run: go get -v -t -d ./...
      - run: go test -v ./...
      - run: wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - run: heroku login
      - run: echo "StrictHostKeyChecking=no" >> ~/.ssh/config
      - run: git remote add heroku git@heroku.com:kostrika-go.git
      #- run: git push heroku master
      - run: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main
      - run: stat /var/run/docker.sock
      - run: docker build -t example-scratch -f Dockerfile.scratch .
      - run: sudo heroku plugins:install heroku-container-registry
      - run: sudo heroku container:login
      - run: sudo service docker start
      - run: docker tag circleci/golang:1.8 registry.heroku.com/kostrika-go/web
      