# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2



jobs:
  
  build:
    
    docker:
      # specify the version
      - image: circleci/golang:1.8

      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/gefracto/gotasks
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: mkdir TEST_RESULTS
      - run: go get github.com/jstemmer/go-junit-report
      - run: go get -v -t -d ./...
      - run: go test -v ./...
      - run: echo "Hello lol"
      - run: wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - run: sudo heroku plugins:install heroku-container-registry
      - run: sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      - run: sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      - run: sudo apt-get update
      - run: sudo apt install docker-ce
      - run: sudo service docker start
      - run: sudo heroku container:login
      - run: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .
      - run: sudo heroku container:push web --app kostrika-go
